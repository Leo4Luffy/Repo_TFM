{"title":"Precisión de la predición mediante simulación con SeqBreed","markdown":{"yaml":{"execute":{"warning":false,"message":false},"bibliography":"references.bib"},"headingText":"Precisión de la predición mediante simulación con SeqBreed","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\nHoy en día, los métodos de predicción genómica se usan ampliamente en la mejora genética de plantas y de animales. Antes de que estos métodos sean implementados en escenarios prácticos, es importante conocer su precisión al predecir el valor de cría estimado (EBV, o GEBV al realizar la predicción utilizando SNP). En este sentido, el objetivo principal de mi trabajo de grado consistió en estudiar el efecto del número de marcadores (SNP) y de individuos genotipados sobre la precisión del GEBV para el carácter tiempo de floración en el arroz. Para ello, se realizó un estudio de simulación a partir del uso del módulo `SeqBreed` [@pérez-enciso2020] del lenguaje de programación `Python`[@Python].\n\nCada uno de los pasos llevados a cabo en dicho estudio de simulación los describiré a continuación (@fig-seqbreed).\n\n```{r}\n#| label: paquetes\n#| eval: true\n#| echo: false\n\npacman::p_load(here, tidyverse, ggforce, reticulate, ggrepel, patchwork)\n```\n\n```{r}\n#| label: fig-seqbreed\n#| eval: true\n#| echo: false\n#| out-width: '74%'\n#| fig-align: 'center'\n#| fig-cap: 'Esquema de predicción usando simulación con el paquete SeqBreed.'\n\nPuntos <- data.frame(x = c(8.2, 11.8, 13.4, 14.8, 11.4), y = c(8.2, 8.2, 3.35, -0.25, -6.6))\n\ndata.frame(\n  x = 10.0, y = -7.8\n  ) %>%\n  ggplot(aes(x0 = x, y0 = y, r = 0.8)) +\n  #geom_blank() +\n  annotate(geom = 'rect', xmin = 7.8, xmax = 12.2, ymin = 4.3, ymax = 5.1, colour = 'yellow', fill = 'yellow', alpha = 0.2) +\n  annotate(geom = 'text', x = 10.0, y = 4.7, label = 'Población fundadora', size = 4.0, colour = 'black') +\n  #annotate(geom = 'text', x = 10.0, y = 4.5, label = '(G, y)', size = 4.4, colour = 'black') +\n  \n  annotate(geom = 'rect', xmin = 3.6, xmax = 8.0, ymin = 7.2, ymax = 8.0, colour = 'black', fill = 'black', alpha = 0.2) +\n  annotate(geom = 'text', x = 5.8, y = 7.6, label = 'Genotipos fundadores', size = 4.0, colour = 'black') +\n  geom_curve(x = 5.8, xend = 7.6, y = 6.9, yend = 5.35, arrow = arrow(length = unit(0.1, 'inch')), size = 0.5, color = 'black', curvature = 0.0) +\n  \n  annotate(geom = 'rect', xmin = 12.0, xmax = 16.4, ymin = 6.4, ymax = 8.0, colour = 'black', fill = 'black', alpha = 0.2) +\n  annotate(geom = 'text', x = 14.2, y = 7.6, label = 'Localización de QTN', size = 4.0, colour = 'black') +\n  annotate(geom = 'text', x = 14.2, y = 6.8, label = 'y efectos', size = 4.0, colour = 'black') +\n  geom_curve(x = 14.2, xend = 12.4, y = 6.1, yend = 5.35, arrow = arrow(length = unit(0.1, 'inch')), size = 0.5, color = 'black', curvature = 0.0) +\n  \n  geom_curve(x = 10.0, xend = 10.0, y = 4.1, yend = 1.6, arrow = arrow(length = unit(0.1, 'inch')), size = 0.5, color = 'black', curvature = 0.0) +\n  geom_curve(x = 10.8, xend = 10.2, y = 2.75, yend = 2.75, arrow = arrow(length = unit(0.1, 'inch')), size = 0.5, color = 'black', curvature = 0.0) +\n  annotate(geom = 'rect', xmin = 11.0, xmax = 13.2, ymin = 2.35, ymax = 3.15, colour = 'black', fill = 'black', alpha = 0.2) +\n  annotate(geom = 'text', x = 12.1, y = 2.75, label = 'Pedigrí', size = 4.0, colour = 'black') +\n  \n  annotate(geom = 'rect', xmin = 8.0, xmax = 12.0, ymin = 0.5, ymax = 1.3, colour = 'yellow', fill = 'yellow', alpha = 0.2) +\n  annotate(geom = 'text', x = 10.0, y = 0.9, label = 'Población', size = 4.0, colour = 'black') +\n  \n  geom_curve(x = 10.0, xend = 10.0, y = 0.3, yend = -2.0, arrow = arrow(length = unit(0.1, 'inch')), size = 0.5, color = 'black', curvature = 0.0) +\n  geom_curve(x = 10.8, xend = 10.2, y = -0.75, yend = -0.75, arrow = arrow(length = unit(0.1, 'inch')), size = 0.5, color = 'black', curvature = 0.0) +\n  annotate(geom = 'rect', xmin = 11.0, xmax = 14.6, ymin = -1.25, ymax = -0.35, colour = 'black', fill = 'black', alpha = 0.2) +\n  annotate(geom = 'text', x = 12.8, y = -0.75, label = 'Densidad de SNP', size = 4.0, colour = 'black') +\n  \n  annotate(geom = 'rect', xmin = 9.6, xmax = 10.8, ymin = -4.0, ymax = -2.2, colour = 'black', fill = 'white') +\n  annotate(geom = 'rect', xmin = 10.1, xmax = 10.7, ymin = -3.75, ymax = -2.9, colour = 'cyan', fill = 'cyan', alpha = 0.2) +\n  annotate(geom = 'text', x = 9.2, y = -3.1, label = 'Matriz H', size = 4.6, angle = 90, colour = 'black') +\n  \n  geom_curve(x = 10.0, xend = 10.0, y = -4.2, yend = -6.3, arrow = arrow(length = unit(0.1, 'inch')), size = 0.5, color = 'black', curvature = 0.0) +\n  annotate(geom = 'rect', xmin = 9.5, xmax = 10.5, ymin = -7.5, ymax = -6.5, colour = 'black', fill = 'black', alpha = 0.4) +\n  annotate(geom = 'rect', xmin = 9.95, xmax = 10.05, ymin = -7.8, ymax = -7.5, colour = 'black', fill = 'black', alpha = 0.7) +\n  geom_circle(aes(x0 = x, y0 = y, r = 0.2), colour = 'black', fill = 'black', alpha = 0.7, size = 0.7) +\n  annotate(geom = 'rect', xmin = 10.7, xmax = 11.1, ymin = -7.8, ymax = -6.5, colour = 'black', fill = 'black', alpha = 0.2) +\n  annotate(geom = 'rect', xmin = 10.85, xmax = 10.95, ymin = -7.5, ymax = -7.3, colour = 'black', fill = 'black', alpha = 0.5) +\n  annotate(geom = 'rect', xmin = 10.88, xmax = 10.92, ymin = -6.8, ymax = -6.9, colour = 'black', fill = 'black', alpha = 0.5) +\n  annotate(geom = 'text', x = 9.1, y = -7.0, label = 'ssGBLUP', size = 4.6, angle = 90, colour = 'black') +\n  annotate(geom = 'text', x = 8.7, y = -7.0, label = 'BLUP', size = 4.6, angle = 90, colour = 'black') +\n  \n  annotate(geom = 'text', x = 8.2, y = 8.2, label = '1', family = 'gochi', size = 3.8, colour = 'black') +\n  annotate(geom = 'text', x = 11.8, y = 8.2, label = '2', family = 'gochi', size = 3.8, colour = 'black') +\n  annotate(geom = 'text', x = 13.4, y = 3.35, label = '3', family = 'gochi', size = 3.8, colour = 'black') +\n  annotate(geom = 'text', x = 14.8, y = -0.25, label = '4', family = 'gochi', size = 3.8, colour = 'black') +\n  annotate(geom = 'text', x = 11.4, y = -6.6, label = '5', family = 'gochi', size = 3.8, colour = 'black') +\n  geom_point(aes(x = x, y = y), data = Puntos, size = 6, shape = 1, color = 'black') +\n  \n  scale_x_continuous(limits = c(2.5, 17.5)) +\n  scale_y_continuous(limits = c(-8.3, 8.5)) +\n  \n  theme_bw() +\n  theme(axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        axis.title = element_blank())\n```\n\n### 1. Uso de genotipos de la población fundadora\n\nPara simular los datos de fenotipo y de genotipo se usaron los datos con los 100.231 SNP resultantes del control de calidad y que puede descargar en el capítulo donde se describen los datos. Luego, usando las funciones `gg.GFounder()` y `gg.Genome()`, como se puede observar en el código a continuación, se obtuvo un archivo que indicó el número de individuos genotipados o individuos de la población fundadora (451), la ploidía (2) y el número de SNP (100.231).\n\n```{python}\n#| label: Paso-1a\n#| eval: false\n\nSNPs_pos = 'SNP_pos'\n\nGen_Pob_base = gg.GFounder(vcfFile = vcf_IND, snpFile = SNP_pos)\n```\n\n::: codigo\n.\n:::\n\n```{python}\n#| label: Paso-1b\n#| eval: false\n\nGen_caracteristicas = gg.Genome(snpFile = SNPs_pos, mapFile = None, ploidy = Gen_Pob_base.ploidy,  XChr = 'X', YChr = 'Y', MTChr = 'MT')\n```\n\n::: aclaracion\n.\n:::\n\n### 2. Especificación de la arquitectura genética (SNP causales (QTN) y sus efectos)\n\nSe llevo a cabo inicialmente un estudio de asociación a nivel genómico (GWAS) usando el software `GCTA`[@yang2011], para identificar las regiones genómicas asociadas con el carácter tiempo de floración. A continuación podrá descargar el archivo que resultó al hacer el GWAS, el cual el efecto de los QTN y su localización.\n\n::: {.callout appearance=\"minimal\"}\n<i class=\"bi bi-download\"></i> [Datos GWAS](datos/gwas.mlma){download=\"gwas.mlma\"}\n:::\n\nPosteriomente, con base en el GWAS (@fig-GWAS), se seleccionaron 50 QTN cuyo efecto era proporcional a la varianza aditiva explicada.\n\n```{r}\n#| label: fig-GWAS\n#| eval: true\n#| echo: false\n#| out-width: '74%'\n#| fig-align: 'center'\n#| fig-cap: 'Visualización del GWAS para el carácter tiempo de floración en el arroz.'\n\nres_GWAS <- read_delim(here('datos', 'gwas.mlma')) # Se importa el archivo con los resultados del GWAS.\n\n# Se visualiza los resultados mediante ggplot2 ----\n\n# 1. se calcula la posición acumulada de los SNPs:\n\nvis_GWAS <- res_GWAS %>%\n  \n  group_by(Chr) %>%\n  summarise(Tam_cromosoma = max(bp)) %>% # se calcula el tamaño de los cromosomas.\n  \n  mutate(Total = cumsum(Tam_cromosoma) - Tam_cromosoma) %>%\n  select(-Tam_cromosoma) %>% # Se calcula la posición acumulada de cada cromosoma.\n  \n  left_join(res_GWAS, ., by = c('Chr' = 'Chr')) %>% # Se adiciona la información anterior al conjunto de datos inicial \"res_GWAS\".\n  \n  arrange(Chr, bp) %>%\n  mutate(bp_total = bp + Total) # Se adiciona la posición acumulada de cada SNP.\n\n# 2. Se prepara el eje x, debido a que no se quiere mostrar la posición acumulada de los SNPs o bp, sino mostrar el nombre del cromosoma:\n\neje_x <- vis_GWAS %>%\n  group_by(Chr) %>%\n  summarise(centro = (max(bp_total) + min(bp_total)) / 2)\n\n# 3. Se hace el gráfico a continuación:\n\nGraf_Manhattan <- ggplot(data = vis_GWAS, aes(x = bp_total, y = -log10(p))) +\n  geom_point(aes(colour = as.factor(Chr)), alpha = 0.2, size = 2.4) +\n  scale_colour_manual(values = c('cyan', 'green', 'red', 'yellow', 'cyan', 'green', 'red', 'yellow', 'cyan', 'green', 'red', 'yellow')) +\n  scale_x_continuous( label = eje_x$Chr, breaks= eje_x$centro ) +\n  labs(x = 'Cromosoma', y = '-log10(p)') +\n  theme_bw() +\n  theme(\n    legend.position = 'none',\n    axis.text = element_text(size = 10),\n    axis.title = element_text(size = 11, face = 'bold')\n    ) # Nota: \n\ngg_qqplot <- function(ps, ci = 0.95) {\n  n  <- length(ps)\n  df <- data.frame(\n    observed = -log10(sort(ps)),\n    expected = -log10(ppoints(n)),\n    clower   = -log10(qbeta(p = (1 - ci) / 2, shape1 = 1:n, shape2 = n:1)),\n    cupper   = -log10(qbeta(p = (1 + ci) / 2, shape1 = 1:n, shape2 = n:1))\n  )\n  log10Pe <- expression(paste('Expected -log'[10], plain(P)))\n  log10Po <- expression(paste('Observed -log'[10], plain(P)))\n  ggplot(df) +\n    geom_ribbon(\n      mapping = aes(x = expected, ymin = clower, ymax = cupper),\n      alpha = 0.2, fill = 'yellow'\n    ) +\n    geom_abline(intercept = 0, slope = 1, alpha = 1.0, size = 1.0) +\n    geom_point(aes(expected, observed), colour = 'yellow', alpha = 0.5, size = 2.6) +\n    xlab(log10Pe) +\n    ylab(log10Po)\n  }\n\nGraf_qq <- gg_qqplot(res_GWAS$p) +\n  labs(x = '-log10(P) esperado', y = '-log10(P) observado') +\n  theme_bw() +\n  theme(\n    axis.text = element_text(size = 10),\n    axis.title = element_text(size = 11, face = 'bold')\n    )\n\nGraf_QTN <- res_GWAS %>%\n  mutate(Chr = as.factor(Chr)) %>%\n  ggplot(data = ., aes(x = Chr, y = bp, label = SNP)) +\n  geom_point(colour = 'cyan', fill = 'cyan', alpha = 0.4, size = 1.4) +\n  #geom_point(data = QTNs, aes(x = Chr, y = bp), colour = 'black', fill = 'white', alpha = 0.6, size = 3.0) +\n  labs(x = 'Cromosomas', y = 'Posición (pb)') +\n  theme_bw() +\n  theme(\n    axis.text = element_text(size = 14, face = 'bold'),\n    axis.title = element_text(size = 15, face = 'bold')\n    ) +\n  geom_label_repel(\n    size = 5.4,\n    colour = 'black',\n    box.padding = 0.7\n    )\n\n(Graf_Manhattan / Graf_qq) #-> GWAS\n```\n\nA continuación podrá descargar los 50 QTN seleccionados.\n\n::: {.callout appearance=\"minimal\"}\n<i class=\"bi bi-download\"></i> [Datos QTN](datos/QTN.txt){download=\"QTN.txt\"}\n:::\n\nPor último, se uso la función `gg.QTNs()` sobre estos datos generados, indicando también la heredabilidad del carácter (0.7) de acuerdo a resultados previamente reportados [@Vourlakietal].\n\n```{python}\n#| label: Paso-2\n#| eval: false\n\nQTN = 'QTN.txt'\n\nQTN = gg.QTNs(h2 = [0.7], genome = Gen_caracteristicas, qtnFile = QTN)\n```\n\n### Referencia bibliográfica\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"ayu","css":["css/bloques.css"],"output-file":"seqbreed.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"0.9.442","theme":"cosmo","cover-image":"images/logo.gif","bibliography":["references.bib"]},"extensions":{"book":{"multiFile":true}}}}}